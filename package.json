{
  "name": "citycoin",
  "version": "1.1.0",
  "description": "A smart contract implementation of the Proof of Transfer consensus mechanism, allowing for the mining and Stacking of a new fungible token on the Stacks blockchain with a portion of miner rewards going to a custodied account for a city to claim the protocol contribution.",
  "scripts": {
    "console": "clarinet console",
    "test": "npm run test:cities && npm run test:base && npm run test:misc",
    "test:cities": "npm run test:mia && npm run test:nyc",
    "test:mia": "npm run test:mia:auth && npm run test:mia:core && npm run test:mia:token",
    "test:mia:auth": "clarinet test ./tests/cities/mia/auth",
    "test:mia:core": "npm run test:mia:core:v1 && npm run test:mia:core:v2",
    "test:mia:core:v1": "clarinet test ./tests/cities/mia/core/core-v1",
    "test:mia:core:v2": "clarinet test ./tests/cities/mia/core/core-v2",
    "test:mia:token": "clarinet test ./tests/cities/mia/token",
    "test:nyc": "npm run test:nyc:auth && npm run test:nyc:core && npm run test:nyc:token",
    "test:nyc:auth": "clarinet test ./tests/cities/nyc/auth",
    "test:nyc:core": "npm run test:nyc:core:v1 && npm run test:nyc:core:v2",
    "test:nyc:core:v1": "clarinet test ./tests/cities/nyc/core/core-v1",
    "test:nyc:core:v2": "clarinet test ./tests/cities/nyc/core/core-v2",
    "test:nyc:token": "clarinet test ./tests/cities/nyc/token",
    "test:base": "npm run test:base:auth && npm run test:base:core && npm run test:base:token",
    "test:base:auth": "clarinet test ./tests/core/citycoin-auth*",
    "test:base:core": "clarinet test ./tests/core/citycoin-core*",
    "test:base:token": "clarinet test ./tests/core/citycoin-token*",
    "test:misc": "npm run test:misc:tardis && npm run test:misc:utils && npm run test:misc:vote",
    "test:misc:tardis": "clarinet test ./tests/tardis/*",
    "test:misc:utils": "clarinet test ./tests/utilities/*",
    "test:misc:vote": "clarinet test ./tests/vote/*",
    "clarinet:check": "clarinet check",
    "clarinet:codecov": "clarinet test --coverage",
    "clarinet:console": "clarinet console",
    "clarinet:costs": "clarinet test --costs",
    "clarinet:test": "clarinet test"
  }
}
